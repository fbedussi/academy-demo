{"version":3,"sources":["history.ts","components/ProductCard.tsx","store/selectors.ts","pages/Pdp.tsx","components/Footer.tsx","store/actions.ts","components/Menu.tsx","components/SearchBox.tsx","components/Header.tsx","pages/Plp.tsx","App.tsx","reportWebVitals.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["history","createBrowserHistory","mapCurrencyCodeToSymbol","USD","EUR","ProductCard","product","name","price","availability","Grid","item","xs","to","UPC","style","textDecoration","color","Card","CardMedia","component","image","alt","CardContent","Typography","variant","sx","mb","currency","current","value","stock","Chip","label","selectSearchTerm","state","searchTerm","selectFilterType","filterType","selectProducts","data","Pdp","upc","useParams","useSelector","find","Footer","theme","useTheme","container","bgcolor","palette","grey","p","justifyContent","ButtonGroup","href","target","rel","Button","setSearchTerm","type","setFilterType","Menu","inStock","dispatch","useDispatch","onClick","SearchBox","spacing","alignItems","pt","pb","TextField","fullWidth","onChange","ev","toLowerCase","Header","borderBottom","src","display","Plp","products","direction","minHeight","flex","filter","includes","map","App","useEffect","fetch","then","res","json","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultStore","reducer","action","store","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","createTheme","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.18962303.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n  Card, CardContent, CardMedia,\n  Chip, Grid, Typography\n} from '@mui/material'\n\nimport { Product } from '../model/Product'\n\nconst mapCurrencyCodeToSymbol: Record<string, string> = {\n  USD: '$',\n  EUR: 'â‚¬',\n}\n\ntype Props = {\n  product: Product\n}\n\nconst ProductCard: React.FC<Props> = ({ product }) => {\n  const { name, price, availability } = product\n\n  return (\n    <Grid item xs={3}>\n      <Link to={`/product/${product.UPC}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n        <Card>\n          <CardMedia\n            component=\"img\"\n            image=\"https://via.placeholder.com/350\"\n            alt={name}\n          />\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              {name}\n            </Typography>\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n              {mapCurrencyCodeToSymbol[price.currency]} {price.current.value}\n            </Typography>\n            {availability.stock > 0 && <Chip label=\"in stock\" />}\n          </CardContent>\n        </Card>\n      </Link>\n    </Grid>\n  )\n}\n\nexport default ProductCard\n","import { StoreModel } from '../model/model'\n\nexport const selectSearchTerm = (state: StoreModel) => state.searchTerm;\n\nexport const selectFilterType = (state: StoreModel) => state.filterType;\n\nexport const selectProducts = (state: StoreModel) => state.data;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router'\n\nimport ProductCard from '../components/ProductCard'\nimport { selectProducts } from '../store/selectors'\n\nconst Pdp: React.FC = () => {\n  const { upc } = useParams<{ upc: string }>()\n\n  const products = useSelector(selectProducts)\n\n  const product = products.find(product => product.UPC === upc)\n  return product ? (\n    <ProductCard product={product} />\n  ) : null\n}\n\nexport default Pdp\n","import React from 'react'\n\nimport {\n  Button, ButtonGroup, Grid,\n  useTheme\n} from '@mui/material'\n\nconst Footer: React.FC = () => {\n  const theme = useTheme();\n\n  return (\n    <Grid container bgcolor={theme.palette.grey[400]} p={2}>\n      <Grid item xs={8}>\n      </Grid>\n      <Grid item xs={4}>\n        <Grid container justifyContent=\"end\">\n          <ButtonGroup variant=\"text\" aria-label=\"outlined primary button group\">\n            <a href=\"https://www.twitter.com\" target=\"_blank\" rel=\"noreferrer\"><Button variant=\"text\">twitter</Button></a>\n            <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noreferrer\"><Button variant=\"text\">facebook</Button></a>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Footer\n","import { FilterType } from '../model/model'\nimport { Product } from '../model/Product'\n\ntype LoadDataAction = { type: 'LOAD_DATA', data: Product[] };\nexport const loadData = (data: Product[]): LoadDataAction => ({\n  type: 'LOAD_DATA',\n  data,\n});\n\ntype SetSearchTermAction = { type: 'SET_SEARCH_TERM', searchTerm: string };\nexport const setSearchTerm = (searchTerm: string): SetSearchTermAction => ({\n  type: 'SET_SEARCH_TERM',\n  searchTerm,\n});\n\ntype SetFilterTypeAction = { type: 'SET_FILTER_TYPE', filterType: FilterType };\nexport const setFilterType = (filterType: FilterType): SetFilterTypeAction => ({\n  type: 'SET_FILTER_TYPE',\n  filterType,\n});\n\nexport type Action = SetSearchTermAction | SetFilterTypeAction | LoadDataAction;\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, ButtonGroup } from '@mui/material'\n\nimport { setFilterType } from '../store/actions'\nimport { selectFilterType } from '../store/selectors'\n\ntype Props = {\n}\n\nconst Menu: React.FC<Props> = () => {\n  const inStock = useSelector(selectFilterType)\n  const dispatch = useDispatch()\n\n  return (\n    <ButtonGroup variant=\"contained\" >\n      <Button variant={inStock === true ? 'contained' : 'outlined'} onClick={() => dispatch(setFilterType(inStock === null ? true : null))}>In Stock</Button>\n      <Button variant={inStock === false ? 'contained' : 'outlined'} onClick={() => dispatch(setFilterType(inStock === null ? false : null))}>Out of Stock</Button>\n    </ButtonGroup>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Grid, TextField } from '@mui/material'\n\nimport { setSearchTerm } from '../store/actions'\nimport { selectSearchTerm } from '../store/selectors'\n\ntype Props = {\n}\n\nconst SearchBox: React.FC<Props> = () => {\n  const searchTerm = useSelector(selectSearchTerm)\n  const dispatch = useDispatch()\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\" pt={1} pb={2}>\n      <Grid item xs={8}>\n        <TextField label=\"search\" variant=\"outlined\" fullWidth value={searchTerm} onChange={(ev) => dispatch(setSearchTerm(ev.target.value.toLowerCase()))} />\n      </Grid>\n      <Grid item xs={4}>\n        <Button variant=\"contained\" onClick={() => dispatch(setSearchTerm(''))}>Reset</Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nimport { Grid } from '@mui/material'\n\nimport Menu from './Menu'\nimport SearchBox from './SearchBox'\n\ntype Props = {\n}\n\nconst Header: React.FC<Props> = () => {\n  return (\n    <Grid container spacing={2} alignItems=\"center\" borderBottom=\"solid 1px\">\n      <Grid item xs={4}>\n        <img src=\"https://via.placeholder.com/150x80\" alt=\"logo\" style={{ display: 'block' }} />\n      </Grid>\n      <Grid item xs={4} justifyContent=\"center\" >\n        <Menu />\n      </Grid>\n      <Grid item xs={4}>\n        <SearchBox />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Grid } from '@mui/material'\n\nimport Footer from '../components/Footer'\nimport Header from '../components/Header'\nimport ProductCard from '../components/ProductCard'\nimport { selectFilterType, selectProducts, selectSearchTerm } from '../store/selectors'\n\nconst Plp: React.FC = () => {\n  const searchTerm = useSelector(selectSearchTerm)\n  const inStock = useSelector(selectFilterType)\n  const products = useSelector(selectProducts)\n\n  return (\n    <Grid container direction=\"column\" minHeight=\"100vh\">\n      <Grid item xs={12}>\n        <Header />\n      </Grid>\n      <Grid container spacing={2} item xs={12} flex={1} p={2} direction=\"row\" justifyContent=\"start\">\n        {products\n          .filter(product => inStock === null ? true : inStock ? product.availability.stock > 0 : product.availability.stock === 0)\n          .filter(product => searchTerm ? product.name.toLowerCase().includes(searchTerm) : true)\n          .map(product => <ProductCard key={product.UPC} product={product} />)}\n      </Grid>\n      <Grid item xs={12}>\n        <Footer />\n      </Grid>\n    </Grid>\n\n\n  )\n}\n\nexport default Plp\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Route, Router, Switch } from 'react-router-dom'\n\nimport history from './history'\nimport Pdp from './pages/Pdp'\nimport Plp from './pages/Plp'\nimport { loadData } from './store/actions'\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    fetch('https://assets.fc-dev.instore.oakley.com/assets/products/products.json')\n      .then(res => res.json())\n      .then(products => dispatch(loadData(products)))\n  }, [dispatch])\n\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route path=\"/product/:upc\">\n          <Pdp />\n        </Route>\n        <Route path=\"/\">\n          <Plp />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry?: () => void) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StoreModel } from '../model/model'\nimport { Action } from './actions'\n\nconst defaultStore: StoreModel = {\n  searchTerm: '',\n  filterType: null,\n  data: [],\n}\n\nconst reducer = (state = defaultStore, action: Action) => {\n  switch (action.type) {\n    case 'LOAD_DATA':\n      return {\n        ...state,\n        data: action.data,\n      }\n    case 'SET_SEARCH_TERM':\n      return {\n        ...state,\n        searchTerm: action.searchTerm,\n      }\n    case 'SET_FILTER_TYPE':\n      return {\n        ...state,\n        filterType: action.filterType,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\n\nimport reducer from './reducer'\n\nconst store = createStore(reducer, undefined, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store/store'\n\nconst theme = createTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}